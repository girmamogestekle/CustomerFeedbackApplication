name: Customer Feedback Application Deployment

on:
  push:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build with Maven
        run: mvn clean install

      - name: Test with Maven
        run: mvn test

      - name: Package with Maven
        run: mvn package

      - name: Login to docker hub
        run: docker login -u "${{ secrets.DOCKER_USERNAME }}" -p "${{ secrets.DOCKER_PASSWORD }}"

      - name: Build docker image
        run: docker build -t girmamogestekle/customer-feedback-application .

      - name: Push docker image
        run: docker push girmamogestekle/customer-feedback-application:latest

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1  # Change to your AWS region

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${{ secrets.AWS_ECR_REGISTRY }}

      - name: Tag Docker image for AWS ECR
        run: docker tag girmamogestekle/customer-feedback-application:latest ${{ secrets.AWS_ECR_REGISTRY }}/customer-feedback-application:latest

      - name: Push Docker image to Amazon ECR
        run: docker push ${{ secrets.AWS_ECR_REGISTRY }}/customer-feedback-application:latest

      - name: Deploy to AWS Lambda
        run: |
          aws lambda update-function-code \
          --function-name customer-feedback-application \
          --image-uri ${{ secrets.AWS_ECR_REGISTRY }}/customer-feedback-application:latest

